;
; Script generated by the ASCOM Driver Installer Script Generator 6.0.0.0
; Generated by JP GODARD on 18/04/2015 (UTC)
;
[Setup]
AppID={{d0b306b3-001c-4934-ab31-da1946ec91e2}
AppName=Spox Switch Driver
AppVerName=Spox Switch Driver 6.0.1
AppVersion=6.0.1
AppPublisher=JP GODARD <jean.paul.astro@gmail.com>
AppPublisherURL=mailto:jean.paul.astro@gmail.com
AppSupportURL=http://tech.groups.yahoo.com/group/ASCOM-Talk/
AppUpdatesURL=http://ascom-standards.org/
VersionInfoVersion=1.0.0
MinVersion=0,5.0.2195sp4
DefaultDirName="{cf}\ASCOM\Switch"
DisableDirPage=yes
DisableProgramGroupPage=yes
OutputDir="."
OutputBaseFilename="Spox Setup"
Compression=lzma
SolidCompression=yes
; Put there by Platform if Driver Installer Support selected
;WizardImageFile="C:\Program Files (x86)\ASCOM\Platform 6 Developer Components\Installer Generator\Resources\WizardImage.bmp"
WizardImageFile="WizardImage.bmp"
WizardSmallImageFile="mysmallimage.bmp"
LicenseFile="C:\Program Files (x86)\ASCOM\Platform 6 Developer Components\Installer Generator\Resources\CreativeCommons.txt"
; {cf}\ASCOM\Uninstall\Switch folder created by Platform, always
UninstallFilesDir="{cf}\ASCOM\Uninstall\Switch\Spox"

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "French"; MessagesFile: "compiler:Languages\French.isl"

[Dirs]
Name: "{cf}\ASCOM\Uninstall\Switch\Spox"
; TODO: Add subfolders below {app} as needed (e.g. Name: "{app}\MyFolder")

;  Add an option to install the source files

[Tasks]
Name: "source"; Description: "Install the Source files"; Flags: unchecked

[Files]
Source: "Spox\bin\Release\ASCOM.Spox.Switch.dll"; DestDir: "{app}"; Components: Ascom Arduino
; Require a read-me HTML to appear after installation, maybe driver's Help doc
Source: "J:\Developpements\Projets_2015\Spox\About_the_modules_ReadMe.txt"; DestDir: "{app}"; Flags: isreadme
; Optional source files (COM and .NET aware)
Source: "J:\Developpements\Projets_2015\Spox\*"; DestDir: "{app}\Source\Spox Driver"; Flags: recursesubdirs; Tasks: source; Excludes: "*.zip,*.exe,*.dll, \bin\*, \obj\*"
; TODO: Add other files needed by your driver here (add subfolders above)
Source: "C:\Users\Jean-Paul\Documents\Arduino\Spox_button_Led\*"; DestDir: "{app}\Source\Arduino"; Flags: recursesubdirs; Components: Arduino; Tasks: source; Excludes: "*.zip,*.exe,*.dll, \bin\*, \obj\*"

; Only if driver is .NET
Source: "Spox_Dll\bin\Release\Spox_Dll.dll"; DestDir: "{app}"; Components: Basic Ascom Arduino
Source: "Spox_Gui\bin\Release\Spox_Gui.exe"; DestDir: "{app}"; Components: Basic Ascom Arduino 
Source: "Spox_test\bin\Release\ASCOM.Spox.Test.exe"; DestDir: "{app}"; Components: Ascom Arduino
Source: "Test_Spox_ReadMe.txt"; DestDir: "{app}"   ; Tasks: source;
Source: "Compil_Spox_Readme.txt"; DestDir: "{app}"    ; Tasks: source;
Source: "Spox_test\SpoxIcon1.ico"; DestDir: "{app}"
Source: "spox.ico"; DestDir: "{app}"

[Run]
; Only for .NET assembly/in-proc drivers
Filename: "{dotnet4032}\regasm.exe"; Parameters: "/codebase ""{app}\ASCOM.Spox.Switch.dll"""; Flags: runhidden 32bit; Components: Ascom Arduino
Filename: "{dotnet4064}\regasm.exe"; Parameters: "/codebase ""{app}\ASCOM.Spox.Switch.dll"""; Flags: runhidden 64bit; Components: Ascom Arduino; Check: IsWin64

; Only if driver is .NET
Filename: "{dotnet4064}\regasm.exe"; Parameters: "/codebase ""{app}\Spox_Dll.dll"""; Flags: 64bit runhidden; Components: Basic Ascom Arduino; Check: IsWin64
Filename: "{dotnet4032}\regasm.exe"; Parameters: "/codebase ""{app}\Spox_Dll.dll"""; Flags: 32bit runhidden; Components: Basic Ascom Arduino

[UninstallRun]
; Only for .NET assembly/in-proc drivers
Filename: "{dotnet4032}\regasm.exe"; Parameters: "-u ""{app}\ASCOM.Spox.Switch.dll"""; Flags: runhidden 32bit
Filename: "{dotnet4064}\regasm.exe"; Parameters: "-u ""{app}\ASCOM.Spox.Switch.dll"""; Flags: runhidden 64bit; Check: IsWin64

[Icons]
Name: "{userdesktop}\Ascom_Spox"; Filename: "{app}\ASCOM.Spox.Test.exe"; WorkingDir: "{app}"; IconFilename: "{app}\spox.ico"; IconIndex: 0; Components: Ascom Arduino
Name: "{userdesktop}\Spox_Gui"; Filename: "{app}\Spox_Gui.exe"; WorkingDir: "{app}"; IconFilename: "{app}\SpoxIcon1.ico"; IconIndex: 0; Components: Basic Ascom Arduino
Name: "{userprograms}\Spox\Ascom_Spox"; Filename: "{app}\ASCOM.Spox.Test.exe"; WorkingDir: "{app}"; IconFilename: "{app}\spox.ico"; IconIndex: 0; Components: Ascom Arduino
Name: "{userprograms}\Spox\Spox_Gui"; Filename: "{app}\Spox_Gui.exe"; WorkingDir: "{app}"; IconFilename: "{app}\SpoxIcon1.ico"; IconIndex: 0; Components: Basic Ascom Arduino
Name: "{group}\{cm:UninstallProgram, ASCOM Spox Switch Driver}"; Filename: "{uninstallexe}"

[Components]
Name: "Basic"; Description: "Windows Basic User Interface"; Types: Basic
Name: "Ascom"; Description: "Install Ascom Part"; Types: Ascom Basic
Name: "Arduino"; Description: "Arduino Software(request Sources)"; Types: Arduino Ascom Basic

[Types]
Name: "Basic"; Description: "Minimal software"
Name: "Ascom"; Description: "Minimal + Ascom will be installed"
Name: "Arduino"; Description: "Minimal + Ascom + Arduino Soources(request Sources)"

[Code]
//
// Before the installer UI appears, verify that the (prerequisite)
// ASCOM Platform 6.0 or greater is installed, including both Helper
// components. Utility is required for all types (COM and .NET)!
//
function InitializeSetup(): Boolean;
var
   U : Variant;
   H : Variant;
   R : Boolean; //JPG
begin
   Result := FALSE;  // Assume failure
   // check that the DriverHelper and Utilities objects exist, report errors if they don't
   try
      H := CreateOLEObject('DriverHelper.Util');
   except
      MsgBox('The ASCOM DriverHelper object has failed to load, this indicates a serious problem with the ASCOM installation', mbInformation, MB_OK);
   end;
   try
      U := CreateOLEObject('ASCOM.Utilities.Util');
   except
      MsgBox('The ASCOM Utilities object has failed to load, this indicates that the ASCOM Platform has not been installed correctly', mbInformation, MB_OK);
   end;
   try
    // the 'helpfiles' component is selected    
    //if IsComponentSelected('Ascom') then
      if (U.IsMinimumRequiredVersion(6,0)) then	// this will work in all locales
         Result := TRUE;
   except
   end;
   if(not Result) then
//      MsgBox('The ASCOM Platform 6.1SP1 or greater is required for this Ascom driver.', mbInformation, MB_OK);    //JPG
      Result :=MsgBox('The ASCOM Platform 6.1SP1 or greater is required for the Ascom driver. Continue?', mbInformation, MB_YESNO)=idYes;    //JPG
end;

// Code to enable the installer to uninstall previous versions of itself when a new version is installed
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
  UninstallExe: String;
  UninstallRegistry: String;
begin
  if (CurStep = ssInstall) then // Install step has started
	begin
      // Create the correct registry location name, which is based on the AppId
      UninstallRegistry := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#SetupSetting("AppId")}' + '_is1');
      // Check whether an extry exists
      if RegQueryStringValue(HKLM, UninstallRegistry, 'UninstallString', UninstallExe) then
        begin // Entry exists and previous version is installed so run its uninstaller quietly after informing the user
          MsgBox('Setup will now remove the previous version.', mbInformation, MB_OK);
          Exec(RemoveQuotes(UninstallExe), ' /SILENT', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
          sleep(1000);    //Give enough time for the install screen to be repainted before continuing
        end
  end;
end;
